#include <stdio.h>

// Function to calculate waiting time for each process
void calculateWaitingTime(int processes[], int n, int burst_time[], int waiting_time[]) {
    waiting_time[0] = 0;  // The first process has no waiting time
    
    // Calculate waiting time for each process
    for (int i = 1; i < n; i++) {
        waiting_time[i] = burst_time[i - 1] + waiting_time[i - 1];
    }
}

// Function to calculate turnaround time for each process
void calculateTurnaroundTime(int processes[], int n, int burst_time[], int waiting_time[], int turnaround_time[]) {
    for (int i = 0; i < n; i++) {
        turnaround_time[i] = burst_time[i] + waiting_time[i];
    }
}

// Function to calculate and print average waiting and turnaround times
void calculateAverageTime(int processes[], int n, int burst_time[]) {
    int waiting_time[n], turnaround_time[n];
    int total_waiting_time = 0, total_turnaround_time = 0;
    
    // Calculate waiting and turnaround times
    calculateWaitingTime(processes, n, burst_time, waiting_time);
    calculateTurnaroundTime(processes, n, burst_time, waiting_time, turnaround_time);
    
    // Display results
    printf("\nProcesses   Burst Time   Waiting Time   Turnaround Time\n");
    for (int i = 0; i < n; i++) {
        total_waiting_time += waiting_time[i];
        total_turnaround_time += turnaround_time[i];
        printf("    %d          %d              %d              %d\n", processes[i], burst_time[i], waiting_time[i], turnaround_time[i]);
    }
    
    // Display average waiting and turnaround times
    printf("\nAverage Waiting Time = %.2f", (float)total_waiting_time / n);
    printf("\nAverage Turnaround Time = %.2f\n", (float)total_turnaround_time / n);
}

int main() {
    int n; // Number of processes

    // Asking the user for the number of processes
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int processes[n], burst_time[n];

    // Input process IDs and burst times
    for (int i = 0; i < n; i++) {
        processes[i] = i + 1;  // Process IDs are 1, 2, 3, etc.
        printf("Enter burst time for process %d: ", processes[i]);
        scanf("%d", &burst_time[i]);
    }

    // Call the function to calculate average time
    calculateAverageTime(processes, n, burst_time);

    return 0;
}
